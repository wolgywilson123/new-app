{"version":3,"sources":["CalendarHeader.js","Day.js","DeleteEventModal.js","NewEventModal.js","App.js","hook/useDate.js","reportWebVitals.js","index.js"],"names":["CalendarHeader","onNext","onBack","dateDisplay","id","class","onClick","Day","day","className","value","isCurrentDay","event","title","DeleteEventModal","onDelete","eventText","onClose","NewEventModal","onSave","useState","setTitle","error","setError","onChange","e","target","placeholder","App","nav","setNav","clicked","setClicked","localStorage","getItem","JSON","parse","events","setEvents","eventForDate","date","find","useEffect","setItem","stringify","setDateDisplay","days","setDays","dt","Date","setMonth","getMonth","getDate","month","year","getFullYear","firstDayOfMonth","daysInMonth","dateString","toLocaleDateString","weekday","paddingDays","indexOf","split","daysArr","i","dayString","push","useDate","map","d","index","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.766ed926.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const CalendarHeader = ({ onNext, onBack, dateDisplay }) => {\r\n  return(\r\n    <div id=\"header\">\r\n        <i class=\"fas fa-angle-left\" onClick={onBack} id=\"backButton\"></i>\r\n        <div id=\"monthDisplay\">{dateDisplay}</div>\r\n        <i class=\"fas fa-angle-right\" onClick={onNext} id=\"nextButton\"></i>\r\n      </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Day = ({ day, onClick }) => {\r\n  const className = `day ${day.value === \"padding\" ? \"padding\" : \"\"} ${\r\n    day.isCurrentDay ? \"currentDay\" : \"\"\r\n  }`;\r\n  return (\r\n    <div onClick={onClick} className={className}>\r\n      {day.value === \"padding\" ? \"\" : day.value}\r\n      {day.event && <div className=\"event\">{day.event.title}</div>}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const DeleteEventModal = ({ onDelete, eventText, onClose }) => {\r\n  return(\r\n    <>\r\n      <div id=\"deleteEventModal\">\r\n        <h2>Event</h2>\r\n        <p id=\"eventText\">{eventText}</p>\r\n        <button onClick={onDelete} id=\"deleteButton\">Delete</button>\r\n        <button onClick={onClose} id=\"closeButton\">Close</button>\r\n      </div>\r\n\r\n      <div id=\"modalBackDrop\"></div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nexport const NewEventModal = ({ onSave, onClose }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [error, setError] = useState(false);\r\n\r\n  return(\r\n    <>\r\n      <div id=\"newEventModal\">\r\n        <h2>New Event</h2>\r\n        <input \r\n          className={error ? 'error' : ''}\r\n          value={title} \r\n          onChange={e => setTitle(e.target.value)} \r\n          id=\"eventTitleInput\" \r\n          placeholder=\"Event Title\" \r\n        />\r\n        <button \r\n          onClick={() => {\r\n            if (title) {\r\n              setError(false);\r\n              onSave(title);\r\n            } else {\r\n              setError(true);\r\n            }\r\n          }} \r\n          id=\"saveButton\">Save</button>\r\n        <button \r\n          onClick={onClose}\r\n          id=\"cancelButton\">Cancel</button>\r\n      </div>\r\n      <div id=\"modalBackDrop\"></div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect  } from 'react'\nimport './App.css';\nimport { CalendarHeader } from './CalendarHeader';\nimport { Day } from './Day';\nimport { DeleteEventModal } from './DeleteEventModal';\nimport { NewEventModal } from './NewEventModal';\nimport { useDate } from './hook/useDate';\n\n const App = () => {\n  const [nav, setNav] = useState(0);\n  const [clicked, setClicked] = useState();\n  const [events, setEvents] = useState(\n    localStorage.getItem('events') ? \n      JSON.parse(localStorage.getItem('events')) : \n      []\n  );\n\n  const eventForDate = date => events.find(e => e.date === date);\n  useEffect(() => {\n    localStorage.setItem('events', JSON.stringify(events));\n  }, [events]);\n  const { days, dateDisplay } = useDate(events, nav);\n  return(\n    <>\n      <div id=\"container\">\n        <CalendarHeader \n          dateDisplay={dateDisplay}\n          onNext={() => setNav(nav + 1)}\n          onBack={() => setNav(nav - 1)}\n        />\n\n        <div id=\"weekdays\">\n          <div>SUN</div>\n          <div>MON</div>\n          <div>TUE</div>\n          <div>WED</div>\n          <div>THU</div>\n          <div>FRI</div>\n          <div>SAT</div>\n        </div>\n\n        <div id=\"calendar\">\n          {days.map((d, index) => (\n            <Day\n              key={index}\n              day={d}\n              onClick={() => {\n                if (d.value !== 'padding') {\n                  setClicked(d.date);\n                }\n              }}\n            />\n          ))}\n        </div>\n      </div>\n\n      {\n        clicked && !eventForDate(clicked) &&\n        <NewEventModal\n          onClose={() => setClicked(null)}\n          onSave={title => {\n            setEvents([ ...events, { title, date: clicked }]);\n            setClicked(null);\n          }}\n        />\n      }\n\n      {\n        clicked && eventForDate(clicked) &&\n        <DeleteEventModal \n          eventText={eventForDate(clicked).title}\n          onClose={() => setClicked(null)}\n          onDelete={() => {\n            setEvents(events.filter(e => e.date !== clicked));\n            setClicked(null);\n          }}\n        />\n      }\n    </>\n  );\n};\nexport default App;\n\n","import React, { useEffect, useState } from 'react';\r\n\r\nexport const useDate = (events, nav) => {\r\n  const [dateDisplay, setDateDisplay] = useState('');\r\n  const [days, setDays] = useState([]);\r\n\r\n  const eventForDate = date => events.find(e => e.date === date);\r\n\r\n  useEffect(() => {\r\n    const weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    const dt = new Date();\r\n\r\n    if (nav !== 0) {\r\n      dt.setMonth(new Date().getMonth() + nav);\r\n    }\r\n\r\n    const day = dt.getDate();\r\n    const month = dt.getMonth();\r\n    const year = dt.getFullYear();\r\n\r\n    const firstDayOfMonth = new Date(year, month, 1);\r\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\r\n    const dateString = firstDayOfMonth.toLocaleDateString('en-us', {\r\n      weekday: 'long',\r\n      year: 'numeric',\r\n      month: 'numeric',\r\n      day: 'numeric',\r\n    });\r\n\r\n    setDateDisplay(`${dt.toLocaleDateString('en-us', { month: 'long' })} ${year}`);\r\n    const paddingDays = weekdays.indexOf(dateString.split(', ')[0]);\r\n\r\n    const daysArr = [];\r\n\r\n    for (let i = 1; i <= paddingDays + daysInMonth; i++) {\r\n      const dayString = `${month + 1}/${i - paddingDays}/${year}`;\r\n\r\n      if (i > paddingDays) {\r\n        daysArr.push({\r\n          value: i - paddingDays,\r\n          event: eventForDate(dayString),\r\n          isCurrentDay: i - paddingDays === day && nav === 0,\r\n          date: dayString,\r\n        });\r\n      } else {\r\n        daysArr.push({\r\n          value: 'padding',\r\n          event: null,\r\n          isCurrentDay: false,\r\n          date: '',\r\n        });\r\n      }\r\n    }\r\n\r\n    setDays(daysArr);\r\n  }, [events, nav]);\r\n\r\n  return {\r\n    days,\r\n    dateDisplay,\r\n  };\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}